syntax = "proto3";

package api.tasks.v1;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/api/client.proto";
import "google/protobuf/timestamp.proto";

message Task {
  option (google.api.resource) = {
    type: "todo.huck.com.ar/Task"
    pattern: "tasks/{task}"
    singular: "task"
    plural: "tasks"
  };

  int64 id = 1;
  string title = 2;
  string description = 3;
  google.protobuf.Timestamp deadline = 4;
  google.protobuf.Timestamp completed_at = 5;

  google.protobuf.Timestamp create_time = 1000;
  google.protobuf.Timestamp update_time = 1001;
}

message CreateTaskRequest {
  // The parent resource where this task will be created.
  // Format: projects/{project}
  reserved 1;

  // Task is the the task to create.
  Task task = 2 [(google.api.field_behavior) = REQUIRED];
}

// TasksService holds the methods to persist, retrieve, modify and remove Tasks.
service TasksService {
  // CreateTask creates a Task.
  rpc CreateTask(CreateTaskRequest) returns (Task) {
    option (google.api.http) = {
      post: "/v1/tasks";
      body: "task";
    };
    option (google.api.method_signature) = "task";
  };
}