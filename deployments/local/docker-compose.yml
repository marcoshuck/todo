version: "3.9"
services:
  app:
    image: "marcoshuck/todo-app"
    build:
      context: ../..
      dockerfile: build/app.Dockerfile
    container_name: app
    ports:
      - "3030:3030"
    restart: always
    env_file:
      - .env.common
      - .env.app
    networks:
      - transport
      - persistence
      - monitoring
    depends_on:
      - collector
      - db
  gateway:
    image: "marcoshuck/todo-gw"
    build:
      context: ../..
      dockerfile: build/gateway.Dockerfile
    container_name: gateway
    ports:
      - "8080:8080"
    restart: always
    env_file:
      - .env.common
      - .env.gateway
    networks:
      - transport
      - monitoring
    depends_on:
      - app
      - collector
  db:
    image: mysql:8
    container_name: db
    ports:
      - "3306:3306"
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: "root"
      MYSQL_DATABASE: "todo"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - persistence
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - "6831:6831"
      - "6832:6832"
      - "5778:5778"
      - "16686:16686"
      - "4318:4318"
      - "14250:14250"
      - "14268:14268"
      - "14269:14269"
      - "9411:9411"
    environment:
      - LOG_LEVEL=debug
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - monitoring
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    restart: unless-stopped
    volumes:
      - ../../configs/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    networks:
      - monitoring

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    volumes:
      - ../../configs/grafana:/etc/grafana/provisioning/datasources
    networks:
      - monitoring

  collector:
    image: otel/opentelemetry-collector:0.88.0
    container_name: collector
    command: [ "--config=/etc/otel/config.yaml" ]
    volumes:
      - ../../configs/otel_collector:/etc/otel/
    ports:
      - "1888:1888"   # pprof extension
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "55679:55679" # zpages extension
      - "4317:4317"   # otlp receiver
    networks:
      - monitoring
    depends_on:
      - jaeger
      - prometheus


networks:
  transport:
    name: "transport"
  persistence:
    name: "persistence"
  monitoring:
    name: "monitoring"
volumes:
  db_data:
  prometheus_data: